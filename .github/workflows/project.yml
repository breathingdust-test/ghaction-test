on:
  project_card:
    types: [moved]
env:
  HC_REVIEW_COLUMN_ID: '11197351'
  WORKING_BOARD_COLUMN_ID: 'PC_lATOEELF384AWDb-zgEoL5g'
  GH_TOKEN: ${{ github.token }}
jobs:
  AWSContributionReady:
    runs-on: ubuntu-latest
    steps:
      - name: Echo
        run: |
          echo "${{ env.HC_REVIEW_COLUMN_ID }} ${{ toJson(github.event) }}"
      - name: Get PullRequest name
        id: get-name
        if: github.event.project_card.column_id == env.HC_REVIEW_COLUMN_ID
        run: |
          PR_ID=$(basename ${{ github.event.project_card.content_url }})
          PR=$(gh api graphql -f query='
          query {
              repository(name: "ghaction-test", owner: "breathingdust-test") {
                  issue(number: 161) {
                  number
                  id
                  title
                  url
                  }
              }
          }')
          read PR_NAME HTML_URL PR_NODE_ID < <(echo $PR | jq -r '.data.repository.issue| "\(.title) \(.url) \(.id)"')
          echo "PR_NODE_ID=$PR_NODE_ID" >> $GITHUB_OUTPUT
          echo "PR_NAME=$PR_NAME" >> $GITHUB_OUTPUT
          echo "HTML_URL=$HTML_URL" >> $GITHUB_OUTPUT
      - name: Feed Message
        if: github.event.project_card.column_id == env.HC_REVIEW_COLUMN_ID
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":aws-cool: AWS Contribution: <${{ steps.get-name.outputs.HTML_URL }}|${{ steps.get-name.outputs.PR_NAME }}> has been marked as ready for HashiCorp review."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: AddToWorkingBoard
        if: github.event.project_card.column_id == env.HC_REVIEW_COLUMN_ID
        run: |
          gh api graphql -f query='mutation MyMutation {
            addProjectCard(input: {projectColumnId: "PC_lATOEELF384AWDb-zgEoL5g", contentId: ${{ steps.get-name.outputs.PR_NODE_ID }}}) {
              clientMutationId
            }
          }'
  
